name: CI-CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# 동시 배포 충돌 방지
concurrency:
  group: portfolio-deploy
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # --- CI: 린트/타입체크/테스트(커버리지) ---
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov ruff mypy

      - name: Lint (ruff)
        run: ruff check .

      - name: Type check (mypy)
        run: mypy .

      - name: Test (coverage >= 100)
        run: pytest --maxfail=1 --disable-warnings --cov=. --cov-report=term-missing --cov-fail-under=100

  # --- Deploy: self-hosted 러너(Rocky)에서 compose로 재배포 ---
  deploy:
    needs: ci
    if: github.ref == 'refs/heads/main'
    runs-on: [ self-hosted, portfolio-prod ]   # ← 러너 등록 시 준 레이블과 동일해야 함
    environment:
      name: production
      url: https://joohoonkim.kro.kr
    steps:
      - uses: actions/checkout@v4

      # .env.prod를 운영 비밀값으로 생성 (레포에 커밋하지 않음)
      - name: Create .env.prod from secrets
        run: |
          cat > .env.prod <<'EOF'
          DB_NAME=${{ secrets.DB_NAME }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=db
          DB_PORT=5432
          DB_URL=${{ secrets.DB_URL }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          REFLEX_ENV=prod
          CADDY_EMAIL=${{ secrets.CADDY_EMAIL }}
          ADMIN_USER=admin
          ADMIN_HASH=${{ secrets.ADMIN_HASH }}
          EOF

      # (선택) 오래된 이미지 정리로 디스크 압박 방지
      - name: Prune old images (optional)
        run: docker image prune -af || true

      - name: Build & Up (Compose on Rocky server)
        run: |
          docker compose -p portfolio build
          docker compose -p portfolio up -d --remove-orphans

      - name: Warm-up
        run: sleep 10

      - name: Health check
        run: |
          curl -fsS https://joohoonkim.kro.kr/ >/dev/null

      - name: Show logs on failure
        if: failure()
        run: docker compose -p portfolio logs --no-color
