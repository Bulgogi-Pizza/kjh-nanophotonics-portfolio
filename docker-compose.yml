services:
  app:
    build: .
    image: kjh-nanophotonics-portfolio-app
    restart: always
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      replicas: 2

  db:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - app-network

  nginx:
    image: nginx:1.21-alpine
    restart: always
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /srv/portfolio/data/certbot/conf:/etc/letsencrypt
      - /srv/portfolio/data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - /srv/portfolio/data/certbot/conf:/etc/letsencrypt
      - /srv/portfolio/data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  pgdata: {}

networks:
  app-network:
    driver: bridge