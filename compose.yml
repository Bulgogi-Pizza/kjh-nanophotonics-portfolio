services:
  backend:
    build:
      dockerfile: back.Dockerfile
    env_file:
      - .env
    ports:
      - 8080:8080
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
  frontend:
    build:
      dockerfile: web.Dockerfile
    env_file:
      - .env
    ports:
      - 3000:80
    networks:
      - app-network
    depends_on:
      - backend
  redis:
    image: redis
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata: { }

networks:
  app-network:
    driver: bridge